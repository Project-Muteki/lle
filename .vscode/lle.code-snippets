{
	// Place your lle workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Peripheral Template": {
		"scope": "rust",
		"prefix": "!peripheral_template",
		"description": "Peripheral template",
		"body": [
			"use crate::{device::{Device, UnicornContext}, log_unsupported_read, log_unsupported_write};\n",
			"pub const BASE: u64 = ${1:0xB0000000};",
			"pub const SIZE: usize = ${2:0x1000};\n",
			"pub fn read(uc: &mut UnicornContext, addr: u64, size: usize) -> u64 {",
			"    log_unsupported_read!(addr, size);",
			"    0",
			"}\n",
			"pub fn write(uc: &mut UnicornContext, addr: u64, size: usize, value: u64) {",
			"    log_unsupported_write!(addr, size, value);",
			"}\n",
			"pub fn tick(_uc: &mut UnicornContext, _device: &mut Device) {",
			"",
			"}"
		]
	}
}
